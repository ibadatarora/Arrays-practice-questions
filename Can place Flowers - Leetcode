class Solution {
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) {
        int c=0;
        if(flowerbed.size()==0)
            return false ;
        else if(flowerbed.size()==1)
        {
            if(flowerbed[0]==0)
                c+=1 ;
        }
        else if(flowerbed.size()==2)
        {
            if(flowerbed[0]==0 && flowerbed[1]==0)
            {
                c+=1 ;
            }
        }
        else if(flowerbed.size()>2)
        {
            for(int i=0 ;i <flowerbed.size()-2 ; i++)
            {
                if(flowerbed[i]==0 && flowerbed[i+1] ==0 && flowerbed[i+2]==0)
                {
                    if(i==0)
                    {
                        flowerbed[i] =1 ;
                        flowerbed[i+2]=1 ;
                        c+=2 ;
                    }
                    else if(i-1==1 || i+3==1 )
                    {
                        flowerbed[i+1] = 1 ;
                        c+=1 ;
                    }
                }
               else if(flowerbed[i]==0 && flowerbed[i+1]==0 && flowerbed[i+2]==1)
                {
                   if(i!=0 && flowerbed[i-1]!=1 || i==0)
                   {
                    flowerbed[i] = 1 ;
                    c+=1 ;
                   }
                }
                else if(flowerbed[i]==1 && flowerbed[i+1]==0 && flowerbed[i+2]==0 )
                {
                    if( i+2!=flowerbed.size()-1 && flowerbed[i+3]!=1 || i+2==flowerbed.size()-1)
                    {
                    flowerbed[i+2] =1 ;
                    c+=1 ;
                    }
                }
            }
        }
        if(n<=c) 
            return true ;
        return false ;
    }
};
